///$tab Main
SET ThousandSep=' ';
SET DecimalSep=',';
SET MoneyThousandSep=' ';
SET MoneyDecimalSep=',';
SET MoneyFormat='# ##0,00 €;-# ##0,00 €';
SET TimeFormat='hh:mm:ss';
SET DateFormat='DD/MM/YYYY';
SET TimestampFormat='DD/MM/YYYY hh:mm:ss[.fff]';
SET FirstWeekDay=0;
SET BrokenWeeks=0;
SET ReferenceDay=4;
SET FirstMonthOfYear=1;
SET CollationLocale='fr-FR';
SET CreateSearchIndexOnReload=1;
SET MonthNames='janv.;févr.;mars;avr.;mai;juin;juil.;août;sept.;oct.;nov.;déc.';
SET LongMonthNames='janvier;février;mars;avril;mai;juin;juillet;août;septembre;octobre;novembre;décembre';
SET DayNames='lun.;mar.;mer.;jeu.;ven.;sam.;dim.';
SET LongDayNames='lundi;mardi;mercredi;jeudi;vendredi;samedi;dimanche';
SET NumericalAbbreviation='3:k;6:M;9:Md;12:T;15:P;18:E;21:Z;24:Y;-3:m;-6:μ;-9:n;-12:p;-15:f;-18:a;-21:z;-24:y';

Set vRepertoire = 'C:\CJE\Docs Clients\DREES\Données maquette';

///$tab Sages Femmes
SexeSF:
mapping Load
	[Sexe SF],
	[Libellé Sexe SF]
 FROM [$(vRepertoire)\SexeSF.qvd]
(qvd);

TUU:
mapping LOAD
	[TUU],
	[Libellé Tranche Unité Urbaine]
 FROM [$(vRepertoire)\TUU.qvd]
(qvd);

[Zone Geo SF]:
LOAD
	[Code Zone],
	[Libellé Zone] as [Lib. Zone SF],
	text(num([Département],'00')) AS [Département],
	[Code Regr. Zone],
	[Libellé Regr. Zone Activité] as [Lib. Regr. Zone Activité SF]
 FROM [$(vRepertoire)\ZoneGeo.qvd]
(qvd);

Exercice:
mapping LOAD
	[Mode Exercice SF],
	[Libellé Mode Exercice SF]
 FROM [$(vRepertoire)\Exercice.qvd]
(qvd);

[Tranches Age SF]:
LOAD
	[Code TA] AS [Tranche Age SF],
	[Libellé TA] as [Lib. Tranche Age SF],
	[Ordre TA] as [Ordre TA SF]
 FROM [$(vRepertoire)\tables de reference.xlsx]
(ooxml, embedded labels, table is TrancheAge);

[SAGF_Tot_C_dep]:
LOAD
	[exerciceb] AS [Mode Exercice SF],
    applymap('Exercice',[exerciceb],'Mode Ex. indéterminé') as [Lib. Mode Exercice SF],        
	[age1erjanvier] AS [Tranche Age SF],
	[annee],
	[SEXID] AS [Sexe SF],
    applymap('SexeSF',[SEXID],'Sexe indéterminé') as [Lib. Sexe SF],
	[tuu2010] AS [TUU SF],
    applymap('TUU',[tuu2010],'TUU indéterminée') as [Lib. TUU SF],    
	[poids] as [Nb. Sages-Femmes],
	text(num([territoire],'00')) AS [territoire-Département],
    [annee] & '|' & text(num([territoire])) as [CleSFSAE]
 FROM [$(vRepertoire)\SAGF_Tot_C_dep.qvd]
(qvd);

///$tab chargement SAE
Set dataManagerTables = '','sae','Region';
//This block renames script tables from non generated section which conflict with the names of managed tables

// For each name in $(dataManagerTables) 
//     Let index = 0;
//     Let currentName = name; 
//     Let tableNumber = TableNumber(name); 
//     Let matches = 0; 
//     Do while not IsNull(tableNumber) or (index > 0 and matches > 0)
//         index = index + 1; 
//         currentName = name & '-' & index; 
//         tableNumber = TableNumber(currentName) 
//         matches = Match('$(currentName)', $(dataManagerTables));
//     Loop 
//     If index > 0 then 
//             Rename Table '$(name)' to '$(currentName)'; 
//     EndIf; 
// Next; 
// Set dataManagerTables = ;


// Unqualify *;

[sae]:
LOAD
	text(num([Numéro Finess],'000000000')) as [Numéro Finess],
	[Année],
	[Numéro Finess de l'EJ] as [Finess EJ],
	[Raison sociale],
	[Statut juridique],
	[Catégorie d'établissement] as [Catég. Etablissement],
	[Département],
	[Région] AS [CleRegion],
	[Ancienne région],
	[Qualité d'ESPIC] as [Qualité ESPIC],
	[Commune INSEE],
	[Groupe d'intérogation] AS [Groupe Interrogation],
	[Nombre de Lits] as [Nb. Lits],
	[Séjours d'hospitalisation complÃ¨te] AS [Nb. Séjours Hospit. Complète],
	[Jours d'hospitalisation complÃ¨te] AS [Nb. Jours Hospit. Complète],
	[Places] as [Nb. Places],
	[Séjours d'hospitalisation partielle] as [Nb. Séjours Hospit. Partielle],
	[Passages aux urgences] as [Nb. Passages Urgences],
	[Séjours avec accouchement] as [Nb. Séjours avec Accouchement],
	[Séances d'hémodialyse] as [Nb. Séances Hémodialyse],
	[Séances de radiothéropie] as [Nb. Séances Radiothéropie],
	[Séances de chimiothérapie] as [Nb. Séances Chimiothérapie],
	Replace([Raison sociale],'Ã‰','E') AS [Raison Sociale Modifiée]
 FROM [$(vRepertoire)\sae.xlsx]
(ooxml, embedded labels, table is sae);

[Region]:
LOAD
	[Region_Code] as [Code Région],
	[Region] as [Région],
	[Region_Area],
// 	[Region_Area_90%],
// 	[Region_Area_60%],
// 	[Region_Area_30%],
	[Region_Point],
	Num#([Region_Code]) AS [CleRegion]
 FROM [$(vRepertoire)\Geographie\GeoData\Region.qvd]
(qvd);





///$tab Dimensions et indicateurs
Dimensions:
load * inline
[Dimension
Numéro Finess
Année
Statut juridique
Catégorie établissement
Département
Commune INSEE
Raison Sociale
Région
MFT
];

Mesures:
load * Inline
[Mesure
Nb. de Lits
Nb. Séjours hospit. complète
Nb. Séjours hospit. partielle
Nb. Jours hospit. complète
Nb. Places
Nb. Passages aux urgences
Nb. Séjours avec accouchement
Nb. Séances hémodialyse
Nb. Séances de radiothérapie
Nb. Séances de chimiothérapie
Nb. Total de séances
Nb. Etablissements SAE
];

///$tab Calcul final des faits
[finess-et]:
LOAD
	text(num([nofinessej],'000000000')) as [CleFiness],
	text(num([nofinessej],'000000000')) as [Finess EJ],
 	[raison sociale] as [Raison Sociale Finess],
// 	[Raison sociale longue],
//	[complrs],
//	[compldistrib],
	[numvoie] as [Numéro Voie],
	[typvoie] as [Type Voie],
	[voie] as [Voie],
	[compvoie] as [Compl. Voie],
	[lieuditbp] as [Lieu Dit],
// 	[region],
// 	[libregion],
// 	[departement],
// 	[libdepartement],
//	[cog],
	text(num([codepostal],'00000')) as [Code Postal],
 	[libelle_routage] as [Lib. routage],
// 	[ligneacheminement],
	[telephone] as [Téléphone],
	[telecopie] as [Télécopie],
	[categetab] as [Catég. Etablissement],
	[libcategetab] as [Lib. Catégor. Etab.],
//	[liblongcategetab],
	[categretab] as [Catég. Grp. Etablissement],
	[libcategretab] as [Lib. Catég. Gr. Etab.] ,
//	[siret],
	[codeape] as [Code APE],
	[libcodeape] as [Lib. APE],
	[mft] as [MFT],
	[libmft] as [Lib. MFT],
//	[liblongmft],
	[sph] as [SPH],
	[libsph] as [Lib. SPH],
//	[numen],
// 	[coordx],
// 	[coordy],
//	[sourcegeocod],
//	Date([dategeocod] ) AS [dategeocod],
	Date(Date#([dateautor], 'DD/MM/YYYY') ) AS [Date Autorisation],
    1 as [Nb. Etablissement Finess]
//    ,
// 	[dateouvert],
// 	[datemaj],
// 	Mid([departement],1,Index([departement],',')-1) AS [Latitude],
// 	Mid([departement],Index([departement],',')+1) AS [Longitude],
// 	GeoMakePoint((Mid([departement],1,Index([departement],',')-1)),(Mid([departement],Index([departement],',')+1))) AS [PointGeo]
 FROM [$(vRepertoire)\finess-et.csv]
(txt, utf8, embedded labels, delimiter is ';', msq);

mapcateg:
mapping load distinct 
	[Catég. Etablissement],
	[Lib. Catégor. Etab.]
resident [finess-et] ;

[sae_temp_6c1b2a34-3e9f-d20a-273d-774b419b]:
LOAD
	RowNo() as CleSeances,
    [Numéro Finess] as [CleFiness],
	[Année],
//	[Finess EJ],
//	[Raison sociale],
	[Statut juridique],
	[Catég. Etablissement] as [Catég. Etablissement SAE],
    applymap('mapcateg',[Catég. Etablissement],'Catégorie inconnue') as [Lib. Catégor. Etab. SAE],
	Text(Num([Département],'00')) as [Département],
	[CleRegion],
//	[Ancienne région],
	[Qualité ESPIC],
	[Commune INSEE],
	[Groupe Interrogation],
	[Nb. Lits],
	[Nb. Séjours Hospit. Complète],
	[Nb. Jours Hospit. Complète],
	[Nb. Places],
	[Nb. Séjours Hospit. Partielle],
	[Nb. Passages Urgences],
	[Nb. Séjours avec Accouchement],
	[Nb. Séances Hémodialyse],
	[Nb. Séances Radiothéropie],
	[Nb. Séances Chimiothérapie],
    if(isnull([Nb. Séances Hémodialyse]),0,[Nb. Séances Hémodialyse]) 
    	+ if(isnull([Nb. Séances Radiothéropie]),0,[Nb. Séances Radiothéropie]) 
    	+ if(isnull([Nb. Séances Chimiothérapie]),0,[Nb. Séances Chimiothérapie]) as [Nb. Total Séances],
    if(isnull([Nb. Séjours Hospit. Complète]),0,[Nb. Séjours Hospit. Complète]) 
    	+ if(isnull([Nb. Séjours Hospit. Partielle]),0,[Nb. Séjours Hospit. Partielle]) as [Nb. Total Séjours],
	Replace(replace(replace([Raison sociale],'Ãˆ','E'),'Ã´','ô'),'Ã‰','E') AS [Raison Sociale SAE],
	//[Ancienne région],
    [Année]&'|' & Text(Num([Département],'00')) as [CleSFSAE],
    1 as [Nb. Etabl. SAE]
    //,Text(Num([Département],'00')) AS [Departement Texte-Departement_Code]
RESIDENT [sae];

DROP TABLE [sae];
RENAME TABLE [sae_temp_6c1b2a34-3e9f-d20a-273d-774b419b] to [sae];

[Departement]:
LOAD
	[Departement_Code] AS [Département],
	[Departement] as [Département Nom],
	[Departement_Area],
	[Departement_Point]    
 FROM [$(vRepertoire)\Geographie\GeoData\Departement.qvd]
(qvd);

[LiensSFSAE]:
load distinct [annee]&'|'&[territoire-Département] as [CleSFSAE],annee as [Année],[territoire-Département] as [Département] resident [SAGF_Tot_C_dep];
Concatenate
load distinct [Année]&'|'&[Département] as [CleSFSAE],[Année],[Département] resident [sae];
drop fields [annee],[territoire-Département] from [SAGF_Tot_C_dep];
drop fields [Année],[Département] from [sae];


[autoCalendar]: 
  DECLARE FIELD DEFINITION Tagged ('$date')
FIELDS
  Dual(Year($1), YearStart($1)) AS [Year] Tagged ('$axis', '$year'),
  Dual('Q'&Num(Ceil(Num(Month($1))/3)),Num(Ceil(NUM(Month($1))/3),00)) AS [Quarter] Tagged ('$quarter', '$cyclic'),
  Dual(Year($1)&'-Q'&Num(Ceil(Num(Month($1))/3)),QuarterStart($1)) AS [YearQuarter] Tagged ('$yearquarter', '$qualified'),
  Dual('Q'&Num(Ceil(Num(Month($1))/3)),QuarterStart($1)) AS [_YearQuarter] Tagged ('$yearquarter', '$hidden', '$simplified'),
  Month($1) AS [Month] Tagged ('$month', '$cyclic'),
  Dual(Year($1)&'-'&Month($1), monthstart($1)) AS [YearMonth] Tagged ('$axis', '$yearmonth', '$qualified'),
  Dual(Month($1), monthstart($1)) AS [_YearMonth] Tagged ('$axis', '$yearmonth', '$simplified', '$hidden'),
  Dual('W'&Num(Week($1),00), Num(Week($1),00)) AS [Week] Tagged ('$weeknumber', '$cyclic'),
  Date(Floor($1)) AS [Date] Tagged ('$axis', '$date', '$qualified'),
  Date(Floor($1), 'D') AS [_Date] Tagged ('$axis', '$date', '$hidden', '$simplified'),
  If (DayNumberOfYear($1) <= DayNumberOfYear(Today()), 1, 0) AS [InYTD] ,
  Year(Today())-Year($1) AS [YearsAgo] ,
  If (DayNumberOfQuarter($1) <= DayNumberOfQuarter(Today()),1,0) AS [InQTD] ,
  4*Year(Today())+Ceil(Month(Today())/3)-4*Year($1)-Ceil(Month($1)/3) AS [QuartersAgo] ,
  Ceil(Month(Today())/3)-Ceil(Month($1)/3) AS [QuarterRelNo] ,
  If(Day($1)<=Day(Today()),1,0) AS [InMTD] ,
  12*Year(Today())+Month(Today())-12*Year($1)-Month($1) AS [MonthsAgo] ,
  Month(Today())-Month($1) AS [MonthRelNo] ,
  If(WeekDay($1)<=WeekDay(Today()),1,0) AS [InWTD] ,
  (WeekStart(Today())-WeekStart($1))/7 AS [WeeksAgo] ,
  Week(Today())-Week($1) AS [WeekRelNo] ;

DERIVE FIELDS FROM FIELDS [dategeocod], [dateautor], [datemaj] USING [autoCalendar] ;
///$tab Calcul seances par type
NoConcatenate
[Seances par Type]:
load CleSeances, [Nb. Séances Hémodialyse] as [Nb Séances],
'Hémodialyse' as [Type Séance] resident sae;
load CleSeances, [Nb. Séances Radiothéropie] as [Nb Séances],
'Radiothéropie' as [Type Séance]  resident sae;
load CleSeances, [Nb. Séances Chimiothérapie] as [Nb Séances],
'Chimiothérapie' as [Type Séance]  resident sae;

///$tab parametres recherche
search exclude [CleRegion],[Region_Area],[Region_Point],[Departement_Area],[Departement_Point], [CleSFSAE],[Ordre TA SF],[CleFiness],[CleSeances];

